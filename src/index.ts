require('dotenv').config();
import 'reflect-metadata';
import * as debug from 'debug';
import * as http from 'http';
import * as express from 'express';
import { configureRoutes } from './routes/config';
import * as helmet from 'helmet';
import * as morgan from 'morgan';
import { createConnection } from 'typeorm';
import { entities } from './database';
import { DB } from './constants';

export const app = express();

createConnection({
    type: 'mysql',
    host: DB.HOST,
    port: +DB.PORT,
    username: DB.USER,
    password: DB.PASS,
    database: DB.NAME,
    synchronize: true,
    dropSchema: false,
    logging: true,
    entities: [...entities],
})
    .then(async connection => {
        (function startServer() {
            app.use(helmet());
            app.use(morgan('tiny'));
            configureRoutes(app);
            const server = http.createServer(app);

            debug('ts-express:server');
            const port = process.env.PORT || 3001;
            console.log(`
        ----------------------STARTING SERVER----------------------
        PORT: ${port}
        ENVIRONMENT: ${process.env.NODE_ENV}
        `);
            app.set('port', port);
            server.listen(port);
        })();
    })
    .catch(error => {
        console.log(`Error while connecting to db ${DB.NAME}@${DB.HOST}:${DB.PORT}`);
        console.log(error);
    });
