import { Resolver, Mutation, Arg, Authorized } from 'type-graphql';
import { getRepository } from 'typeorm';
import { Organizations, OrganizationStatus } from '../../entities/organization.entity';
import { AdminInput } from '../inputs/admin.input';

@Resolver()
export class AdminResolver {
    @Authorized()
    @Mutation(() => Organizations)
    async changeOrgStatus(@Arg('data')
    {
        organizationUUID,
        adminOrganizationUUID,
        payload,
        signature,
    }: AdminInput): Promise<Organizations> {
        const organizationRepo = getRepository(Organizations);
        let organization = await organizationRepo.findOne({ where: { organizationUUID } });
        organization.organizationStatus = payload as OrganizationStatus;
        return await organizationRepo.save(organization);
    }
}
