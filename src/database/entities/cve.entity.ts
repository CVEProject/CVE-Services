import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, Unique, UpdateDateColumn, OneToOne, JoinColumn, ManyToOne } from 'typeorm';
import { CNANumberingAuthority } from './cna.entity';
import { Field, ID, ObjectType } from 'type-graphql';
import { Organizations } from './organization.entity';

enum CVEStatus {
    FREE = 'Free',
    REJECTED = 'Rejected',
    DISPUTED = 'Disputed',
    POPULATED = 'Populated',
    PUBLISHED = 'Published',
    PUBLIC = 'Public',
    RESERVED = 'Reserved',
    OBSOLETE = 'Obsolete',
}

@ObjectType()
@Entity()
export class CommonVulnerabilitiesExposures {
    @Field(() => ID)
    @PrimaryGeneratedColumn('uuid')
    cveUUID: string;

    @Field()
    @Column({
        type: 'enum',
        enum: CVEStatus,
        default: CVEStatus.FREE,
    })
    cveStatus: CVEStatus;

    @Field()
    @Column({
        type: 'varchar',
        nullable: false,
        unique: true,
    })
    cveID: string;

    @CreateDateColumn()
    createdAt: Date;

    @UpdateDateColumn()
    updatedDate: Date;

    @Field(() => CNANumberingAuthority)
    @ManyToOne(type => CNANumberingAuthority, cna => cna.cves, {
        cascade: true,
    })
    cna: CNANumberingAuthority;

    @Field(() => Organizations)
    @ManyToOne(type => Organizations, cna => cna.cves, {
        cascade: true,
    })
    organization: Organizations;
}
