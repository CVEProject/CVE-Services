import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, Unique, UpdateDateColumn, OneToOne, JoinColumn, ManyToOne } from 'typeorm';
import { PublicKeys } from './public-key.entity';
import { CNANumberingAuthority } from './cna.entity';
import { ObjectType, Field, ID } from "type-graphql";
import { Organizations } from './organization.entity';


enum CVEStatus {
    FREE = 'Free',
    REJECTED = 'Rejected',
    DISPUTED = 'Disputed',
    POPULATED = 'Populated',
    PUBLISHED = 'Published',
    PUBLIC = 'Public',
    RESERVED = 'Reserved',
    OBSOLETE = 'Obsolete'
}


@Entity()
export class CommonVulnerabilitiesExposures {

    @Field(() => ID)
    @PrimaryGeneratedColumn('uuid')
    cveUUID: string;

    @Field()
    @Column({
        type: 'enum',
        enum: CVEStatus,
        default: CVEStatus.FREE
    })
    cveStatus: CVEStatus;

    @Field()
    @Column({
        type: 'varchar',
        nullable: false,
        unique: true
    })
    cveID: string;

    @CreateDateColumn()
    createdAt: Date;

    @UpdateDateColumn()
    updatedDate: Date;

    @Field()
    @OneToOne(type => PublicKeys, publicKey => publicKey.publicKey)
    @JoinColumn()
    publicKey:PublicKeys;

    @Field()
    @ManyToOne(type => CNANumberingAuthority, cna => cna.cves)
    cna: CNANumberingAuthority;

    @Field()
    @ManyToOne(type => Organizations, cna => cna.cves)
    organization: Organizations;
}
