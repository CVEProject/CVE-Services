import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToOne, JoinColumn, ManyToOne, OneToMany } from 'typeorm';
import { CNANumberingAuthority } from './cna.entity';
import { ObjectType, Field, ID } from "type-graphql";
import { PublicKeys } from './public-key.entity';


@Entity()
export class Organizations {

    @Field(() => ID)
    @PrimaryGeneratedColumn('uuid')
    organizationUUID: string;

    @Field()
    @Column({
        type: 'varchar',
        nullable: false,
        unique: true
    })
    organizationName: string;

    @Field()
    @Column({
        type: 'varchar',
        default: ''
    })
    organizationWebsite?: string;

    @CreateDateColumn()
    createdAt: Date;

    @UpdateDateColumn()
    updatedDate: Date;

    @Field()
    @OneToMany(type => CNANumberingAuthority, cna => cna.organization)
    cnas: CNANumberingAuthority[];

    @Field()
    @OneToOne(type => PublicKeys, publicKey => publicKey.publicKey)
    @JoinColumn()
    publicKey:PublicKeys;
}
