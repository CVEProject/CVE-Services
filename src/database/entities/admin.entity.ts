import {
    Entity,
    PrimaryGeneratedColumn,
    Column,
    CreateDateColumn,
    UpdateDateColumn,
    OneToOne,
    JoinColumn,
    ManyToOne,
    OneToMany,
    BaseEntity,
} from 'typeorm';
import { CNANumberingAuthority } from './cna.entity';
import { InputType, Field, ID, ObjectType } from 'type-graphql';
import { PublicKeys } from './public-key.entity';
import { CommonVulnerabilitiesExposures } from './cve.entity';
import { Organizations } from './organization.entity';

@ObjectType()
@Entity()
export class Admin extends BaseEntity {
    @Field(() => ID)
    @PrimaryGeneratedColumn('uuid')
    adminUUID: string;

    @Field(() => Organizations)
    @OneToOne(type => Organizations, organization => organization.admin)
    @JoinColumn()
    organization: Organizations;
}
