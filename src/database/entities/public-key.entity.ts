import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, Unique, UpdateDateColumn, OneToMany, ManyToOne, OneToOne } from 'typeorm';
import { CNANumberingAuthority } from './cna.entity';
import { ObjectType, Field, ID } from "type-graphql";
import { Organizations } from './organization.entity';

@Entity()
export class PublicKeys {

    @Field(() => ID)
    @PrimaryGeneratedColumn('uuid')
    publicKeyUUID: string;

    @Field()
    @Column({
        type: 'varchar',
        nullable: false,
        unique: true
    })
    publicKey: string;

    @CreateDateColumn()
    createdAt: Date;

    @UpdateDateColumn()
    updatedDate: Date;

    @Field()
    @OneToOne(type => Organizations, cna => cna.publicKey, {
        cascade: true,
    })
    cna: CNANumberingAuthority;
}
