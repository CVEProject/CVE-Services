// import { CVE_STATUS, DEFAULT_CVE_STATUS, RESPONSE_ERROR_MESSAGE } from '../../constants';
// import * as uuidv4 from 'uuid/v4';

// //TODO: What is the purpose of History??? Once we get more documentation we need to implement that part.
// export class CveObject {
//     public year: string;
//     public status: string;
//     public request: any;
//     public CVE_ID_OBJECT = {
//         cve_id: '',
//         status: '',
//         Organization: { org_id: '', org_name: '' },
//         History: 'TBD',
//     };
//     /**
//      * Creates a CVE Object
//      * @param {any} request - request recived from the client. Contains data such as requester UUID
//      * @param {string?} year - Optional param. Contains the year requested by the client
//      * @param {string?} status - Optional param. Contains the status requested by the client
//      * @returns {object} - Returns a CVE object.
//      */
//     public constructor(request: any, year?: string, status: string = DEFAULT_CVE_STATUS) {
//         if (!year) year = new Date().getFullYear().toString();

//         if (!CVE_STATUS[status]) throw new Error(RESPONSE_ERROR_MESSAGE[403]);

//         this.year = year;
//         this.status = CVE_STATUS[status];
//         this.request = request;
//     }

//     public createCVEID() {
//         this.CVE_ID_OBJECT.cve_id = 'CVE-' + this.year + '-' + uuidv4(); //can short the uuid to last 4 digits if needed
//         this.CVE_ID_OBJECT.status = this.status;
//         this.CVE_ID_OBJECT.Organization.org_id = this.request.cnaData.cnaUUID;
//         this.CVE_ID_OBJECT.Organization.org_name = this.request.cnaData.cnaName;
//         return this.CVE_ID_OBJECT;
//     }
// }
