// import { dbOperations } from '../database/db-operations';
// import { RESPONSE_ERROR_MESSAGE } from '../constants';
// //
// //This controller contains all functions the Admin/SuperCNA can call
// //1. registerCNA
// //2. deactivateCNA
// //3. updateCNA

// export class Admin {
//     /**
//  * @api {post} /register-cna Register New CNA
//  * @apiName Register New CNA
//  * @apiGroup Admin
//  * @apiVersion  0.0.0
//  * @apiHeader Signature RSA Signature.
//  * @apiParamExample {json} Request-Example:
// content-type: application/json
// {
//   "payload": {
//   "cnaName": "Test Register Name",
//   "cnaDescription": "test description",
//   "cnaType": "PUBLISHER",
//   "cnaHardQuota": 100,
//   "cnaSoftQuota": 50,
//   "cnaPublicKey": pulicKey
//   },
//   "userUUID": AdminUUID
// }

//  *@apiSuccessExample Success-Response:
//  *HTTP/1.1 200 OK
// {
//   "cnaUUID": UUID,
//   "message": "CNA created"
// }
//  * @apiErrorExample Error-Response 1:
//  *HTTP/1.1 400 Bad Request
// {
//   "error": "error message"
// }
//  * @apiErrorExample Error-Response 2:
//  *HTTP/1.1 500 Bad Request
// {
//   "error": "Failed to validate key."
// }
//  */

//     public async registerCNA(request, response, next) {
//         const { payload } = request.body;

//         try {
//             let cnaUUID = await dbOperations.createCNA(payload);
//             response.status(200).json({ cnaUUID: cnaUUID, message: 'CNA created' });
//         } catch (e) {
//             console.log(e);
//             response.status(400).json({ error: RESPONSE_ERROR_MESSAGE[400] });
//         }
//     }

//     /**
//  * @api {post} /deactivate-cna Deactivate CNA
//  * @apiName Deactivate CNA
//  * @apiGroup Admin
//  * @apiVersion  0.0.0
//  * @apiHeader Signature RSA Signature.
//  * @apiParamExample {json} Request-Example:
// content-type: application/json
// {
//   "payload": {
//     "cnaUUID": "cnaID",
//   },
//   "userUUID": AdminUUID
// }

//  *@apiSuccessExample Success-Response:
//  *HTTP/1.1 200 OK
// {
//   "userUUID": UUID,
//   "deactivate": true
// }
//  * @apiErrorExample Error-Response 1:
//  *HTTP/1.1 400 Bad Request
// {
//   "error": "error message"
// }
//  * @apiErrorExample Error-Response 2:
//  *HTTP/1.1 500 Bad Request
// {
//   "error": "Failed to validate key."
// }
//  */
//     public async deactivateCNA(request, response) {
//         const { payload } = request.body;
//         try {
//             console.log(payload.cnaUUID);
//             await dbOperations.deactivateCNA(payload.cnaUUID);
//             response.status(200).json({ deactivate: true });
//         } catch (e) {
//             console.log(e);
//             response.status(400).json({ error: RESPONSE_ERROR_MESSAGE[400] });
//         }
//     }

//     /**
//  * @api {post} /update-cna Update CNA
//  * @apiName Update CNA
//  * @apiGroup CNA
//  * @apiVersion  0.0.0
//  * @apiHeader Signature RSA Signature.
//  * @apiParamExample {json} Request-Example:
// content-type: application/json
// {
//   "payload": {
//     cnaPublicKey: " ",
//     cnaName: " ",
//     cnaType: " ",
//     cnaDescription: " ",
//     cnaEmail: " ",
//     cnaWebSite: " ",
//     cnaGPGKeys: ""
//   },
//   "userUUID": AdminUUID
// }

//  *@apiSuccessExample Success-Response:
//  *HTTP/1.1 200 OK
// {
//   "updated": true
// }
//  * @apiErrorExample Error-Response 1:
//  *HTTP/1.1 400 Bad Request
// {
//   "error": "error message"
// }
//  * @apiErrorExample Error-Response 2:
//  *HTTP/1.1 500 Bad Request
// {
//   "error": "Failed to validate key."
// }
//  */
//     public async updateCNA(request, response, next) {
//         const { payload } = request.body;
//         try {
//             await dbOperations.updateCNA(payload.cnaUUID, payload);
//             response.status(200).json({ updated: true });
//         } catch (e) {
//             console.log(e);
//             response.status(400).json({ error: RESPONSE_ERROR_MESSAGE[400] });
//         }
//     }
// }
