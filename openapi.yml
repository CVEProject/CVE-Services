# this API specification is a draft and subject to change.
openapi: "3.0.2"
info:
  title: CVE Services API
  description: The CVE services API which supports automation tooling for the CVE Project.
  version: 0.1.0
  contact:
    "name": "CVE Services API"
    "url": https://cve.mitre.org/api
    "email": placeholder-cve-services-api@mitre.org
  license:
    name: Creative Commons Zero v1.0 Universal
    url: https://creativecommons.org/publicdomain/zero/1.0/legalcode
  termsOfService: https://placeholder.cve.mitre.org/api/terms
servers:
  - url: https://api-dev.cve.mitre.org/v1
    description: Development and testing server
  - url: https://api.cve.mitre.org/v1
    description: Production server
components:
  parameters:
    cve-id-path:
      name: cve-id
      in: path
      description: The CVE ID for which the record is being submitted
      required: true
      schema:
        type: string
        pattern: 'CVE-\d{4}-\d+'
    org-shortname:
      name: shortname
      in: path
      description: The shortname for an organization in the system
      required: true
      schema:
        type: string
    api-entity-header:
      name: CVE-API-CNA
      description: >
        The shortname for the entity (e.g., CNA, ADP) that is authenticated or requesting authentication. \[TODO:: Is there a pattern for the format?\]
      in: header
      required: true
      schema:
        type: string
    api-user-header:
      name: CVE-API-SUBMITTER
      description: >
        The username for the account that is making the request.
      in: header
      required: true
      schema:
        type: string
    api-secret-header:
      name: CVE-API-SECRET
      description: >
        The User's secret. \[TODO:: Is there a pattern for the format?\]
      in: header
      required: true
      schema:
        type: string
  schemas:
    cve-id:
      properties:
        cve-id:
          type: string
          pattern: '^CVE-\d{4}-\d+$'
        cve_year:
          type: string
          format: "YYYY"
        owning_cna:
          type: string
          description: The shortname for the organization that owns the CVE-ID.
        state:
          type: string
          enum: [RESERVED, PUBLIC, REJECT]
        requested_by:
          type: object
          properties:
            cna:
              type: string
              description: The shortname for the organization of the user that requested the ID.
            user:
              type: string
              description: The username for the account that requested the ID.
        time:
          type: object
          properties:
            created:
              type: string
              format: date-time
              description: The time the ID was created.
            modified:
              type: string
              format: date-time
              description: The last time the ID was modified.
            reserved:
              type: string
              format: date-time
              description: The date the ID was reserved.
paths:
  # CVE ID Reservation service
  /cve-id:
    get:
      summary: Retrieves all CVE IDs entity owns.
      parameters:
        - "$ref": "#/components/parameters/api-entity-header"
        - "$ref": "#/components/parameters/api-secret-header"
        - "$ref": "#/components/parameters/api-user-header"
        - in: query
          name: state
          schema:
            type: string
          description: "Filter by CVE state: RESERVED, PUBLIC, or REJECT"
        - in: query
          name: cve_id_year
          schema:
            type: integer
          description: "Filter by the year in the CVE ID (YYYY)"
        - in: query
          name: time_created.lt
          schema:
            type: string
            format: date-time
          description: "Get all CVE IDs created (reserved) before timestamp"
        - in: query
          name: time_created.gt
          schema:
            type: string
            format: date-time
          description: "Get all CVE IDs created (reserved) after timestamp"
      responses:
        200:
          description: A list of CVE-IDs the organization owns and fit within the query parameters given.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/cve-id'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
    post:
      summary: Reserves IDs for the entity.
      parameters:
        - "$ref": "#/components/parameters/api-entity-header"
        - "$ref": "#/components/parameters/api-secret-header"
        - "$ref": "#/components/parameters/api-user-header"
        - in: query
          name: sequential
          schema:
            type: boolean
          description: Indicates whether IDs should be sequential
        - in: query
          name: amount
          schema:
            type: integer
          description: Amount of IDs desired
      responses:
        200:
          description: A list of the newly reserved CVE-IDs the account requested.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/cve-id'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /cve-id/{cve-id}:
    parameters:
      - "$ref": "#/components/parameters/cve-id-path"
    get:
      summary: Retrieves a CVE ID by ID, can be a CVE the entity doesn't own if in a PUBLIC or REJECT state.
      operationId: getCVEIdById
      parameters:
        - "$ref": "#/components/parameters/api-entity-header"
        - "$ref": "#/components/parameters/api-secret-header"
        - "$ref": "#/components/parameters/api-user-header"
      responses:
        200:
          description: >
            The requested CVE ID is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cve-id'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
    # Posts only accessible by Secretariat
    post:
      summary: Endpoint for Admin purposes to change state and ownership of the CVE ID.
      operationId: submitCVEIdById
      parameters:
        - "$ref": "#/components/parameters/api-entity-header"
        - "$ref": "#/components/parameters/api-secret-header"
        - "$ref": "#/components/parameters/api-user-header"
        - in: query
          name: state
          schema:
            type: string
          description: "Change state of CVE ID to either PUBLIC or REJECT"
        - in: query
          name: cna
          schema:
            type: string
          description: "Change owning CNA of CVE ID to new CNA (shortname)"
      responses:
        200:
          description: >
            The updated CVE ID is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cve-id'
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  # User Registry service
  /cna/:shortname/id_quota:
    get:
      summary: Allows an Org to see details about their id_quota.
      operationId: getIdQuota
      parameters:
        - "$ref": "#/components/parameters/api-entity-header"
        - "$ref": "#/components/parameters/api-secret-header"
        - "$ref": "#/components/parameters/api-user-header"
      responses:
        200:
          description: Returns details of the organization's id_quota
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_quota:
                    type: number
                    description: The number of IDs the organization is allowed to have in the RESERVED state at one time.
                  total_reserved:
                    type: number
                    description: The total of IDs across all years that the organization has in the RESERVED state.
                  available:
                    type: number
                    description: id_quota - total_reserved
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  # Will only be accessible to Secretariat
  /cna/:shortname:
    parameters:
      - "$ref": "#/components/parameters/org-shortname"
    post:
      summary: Endpoint for Admin purposes to change organization details.
      operationId: submitOrgByShortname
      parameters:
        - "$ref": "#/components/parameters/api-entity-header"
        - "$ref": "#/components/parameters/api-secret-header"
        - "$ref": "#/components/parameters/api-user-header"
        - in: query
          name: id_quota
          schema:
            type: integer
          description: "Change the id_quota for an Org"
        - in: query
          name: active_roles.add
          schema:
            type: string
          description: "Add a role to an Org (only CNA allowed for now)"
        - in: query
          name: active_roles.remove
          schema:
            type: string
          description: "Remove a role from an Org (only CNA allowed for now)"
        - in: query
          name: shortname
          schema:
            type: string
          description: "Change the shortname of an Org"
        - in: query
          name: name
          schema:
            type: string
          description: "Change the human friendly name of an Org"
      responses:
        200:
          description: Updated organization object
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The presentation name of the organization.
                  short_name:
                    type: string
                    description: The unique, referencable name of the organization that can be used to identify the organization.
                  UUID:
                    type: string
                    format: uuid
                    description: The unique ID that does not change despite short_name or name for the organization changing.
                  authority:
                    type: object
                    properties:
                      active_roles:
                        type: array
                        items:
                          type: string
                          enum: [CNA] # Future will include Root_CNA, ADP
                  policies:
                    type: object
                    properties:
                      id_quota:
                        type: number
                  time:
                    type: object
                    properties:
                      created:
                        type: string
                        format: date-time
                      modified:
                        type: string
                        format: date-time
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /cna/:shortname/user/:username:
    post:
      summary: Allows admin to change properties of users
      operationId: submitUser
      parameters:
        - "$ref": "#/components/parameters/api-entity-header"
        - "$ref": "#/components/parameters/api-secret-header"
        - "$ref": "#/components/parameters/api-user-header"
        - in: query
          name: active
          schema:
            type: boolean
          description: "Indicates whether the account should be active or not"
      responses:
        200:
          description: The updated user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: The unique (for the organization they belong to) name to reference the user's account.
                  cna_short_name:
                    type: string
                    description: The unique, referencable name of the organization the user belongs to.
                  UUID:
                    type: string
                    format: uuid
                    description: The unique ID that does not change despite other changes to the account.
                  active:
                    type: boolean
                    description: Indicates whether the user is active and able to execute functions amongst the system.
                  time:
                    type: object
                    properties:
                      created:
                        type: string
                        format: date-time
                      modified:
                        type: string
                        format: date-time
                      reserved:
                        type: string
                        format: date-time
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /cna/:shortname/user/:username/reset_secret:
    post:
      summary: Resets the user's API Secret
      operationId: resetUserSecret
      parameters:
        - "$ref": "#/components/parameters/api-entity-header"
        - "$ref": "#/components/parameters/api-secret-header"
        - "$ref": "#/components/parameters/api-user-header"
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: KCXC9JD-08M4WGH-M9294W1-B6RTBTH
        400:
          description: Bad Request
        401:
          description: Not Authenticated
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error


