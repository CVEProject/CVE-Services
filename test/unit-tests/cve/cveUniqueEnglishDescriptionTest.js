const express = require('express')
const app = express()
const chai = require('chai')
const expect = chai.expect
chai.use(require('chai-http'))

// Body Parser Middleware
app.use(express.json()) // Allows us to handle raw JSON data
app.use(express.urlencoded({ extended: false })) // Allows us to handle url encoded data
const middleware = require('../../../src/middleware/middleware')
const cveMiddleware = require('../../../src/controller/cve.controller/cve.middleware')
app.use(middleware.createCtxAndReqUUID)

const rejectedBody = require('../../../test-http/src/test/cve_tests/cve_record_fixtures/rejectBody.json')
const multipleEngDescriptions = require('../../../test-http/src/test/cve_tests/cve_record_fixtures/rejectBodyMultipleSameEngValues.json')

describe('Testing the uniqueEnglishDescription middleware', () => {
  context('Negative Tests', function () {
    it('Submit a reject request with multiple English descriptions', function (done) {
      const result = cveMiddleware.uniqueEnglishDescription(multipleEngDescriptions.cnaContainer.rejectedReasons)
      expect(result).to.be.false
      done()
    })
  })

  context('Positive Tests', () => {
    it('Submit a reject request with single English descriptions', function (done) {
      const result = cveMiddleware.uniqueEnglishDescription(rejectedBody.cnaContainer.rejectedReasons)
      expect(result).to.be.true
      done()
    })
  })
})
