const chai = require('chai')
const expect = chai.expect
chai.use(require('chai-http'))
const middleware = require('../src/middleware/middleware.js')
const headers = require('./constants').headers
const cveRejectPass = require('./schemas/CVE-2017-4024_reject_pass.json')
const cveRejectFail = require('./schemas/CVE-2017-4024_reject_fail.json')

describe('Test Validator for JSON schema 5.0', () => {
  // it('Validate a JSON schema REJECT that should pass', (done) => {
  //   chai.request('http://localhost:3000')
  //     .post('/api/cve/CVE-2017-4024')
  //     .set(headers)
  //     .send(cveRejectPass)
  //     .end((err, res) => {
  //       if (err) {
  //         console.log(err.stack)
  //       }

  //       console.log(res)
  //       expect(res).to.have.status(200)
  //       expect(res).to.have.property('text')
  //       expect(res.text).to.be.a('string')
  //       expect(res.text).to.equal('CVE-2017-4024 has been updated')
  //       done()
  //     })
  // })

  // it('Validate a JSON schema REJECT that should fail', (done) => {
  //   chai.request('http://localhost:3000')
  //     .post('/api/cve/CVE-2017-4024')
  //     .set(headers)
  //     .send(cveRejectFail)
  //     .end((err, res) => {
  //       if (err) {
  //         console.log(err.stack)
  //       }

  //       // console.log(res)
  //       expect(res).to.have.status(400)
  //       expect(res).to.have.property('error')
  //       expect(res.error).to.have.property('text')
  //       expect(res.error.text).to.be.a('string')
  //       expect(res.error.text).to.include('CVE JSON schema validation FAILED')
  //       // TODO: more specific asserts needed
  //       done()
  //     })
  // })
})
