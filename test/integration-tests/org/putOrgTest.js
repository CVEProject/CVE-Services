const chai = require('chai')
chai.use(require('chai-http'))
const expect = chai.expect

const constants = require('../constants.js')
const app = require('../../../src/index.js')

const params = {new_short_name: 'test_org', name: 'Test Organization', id_quota: '100000'}

describe('Testing org put endpoint', () => {
    context('Positive Tests', () => {
        it('Allows update made by a secretariat to itself', async () => {
            await chai.request(app)
            .put('/api/org/mitre')
            .set({ ...constants.headers })
            .query(params)
            .send()
            .then((res, err) => {
                console.log(res.text)
                expect(res).to.have.status(200)
                expect(res.body.updated.short_name).to.equal(constants.testOrg.short_name)
                expect(err).to.be.undefined
            })
        })
        it('Allows update made by a secretariat to another org', async () => {
            await chai.request(app)
            .put('/api/org/cause_8')
            .set({ ...constants.headers })
            .send()
            .then((res, err) => {
                expect(res).to.have.status(200)
                expect(err).to.be.undefined
            })
        })
        it('Allows update made by non secretariat org to itself', async () => {
            await chai.request(app)
            .put('/api/org/win_5')
            .set({ ...constants.nonSecretariatUserHeaders })
            .send()
            .then((res, err) => {
                expect(res).to.have.status(200)
                expect(err).to.be.undefined
            })
        })
    })
    context('Negative Tests', () => {
        it('Fails update made by a non-secretariat org to a different org', async () => {
            await chai.request(app)
            .put('/api/org/cause_8')
            .set({ ...constants.nonSecretariatUserHeaders })
            .send()
            .then((res, err) => {
                expect(res).to.have.status(401)
                expect(err).to.be.undefined
            })
        })
    })
})